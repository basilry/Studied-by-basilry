// <1> 소개

// 자바스크립트가 도입되면서 웹은 빠른속도로 정적인 것에서 동적인 것으로,
// 문서에서 애플리케이션으로 발전하기 시작했다.

//처음에는 사용자의 행동에 따라 웹페이지가 변화무쌍하게 변하는 것만으로 만족하였으나,
// 새로 쏟아져 나오는 많은 불만사항 중 가장 큰 것은 웹페이지의 정보를 부분적으로 변경하는 것이다.

//구글 검색창에서 a를 쓰고, j를 썼을 때, 추천검색어들을 어떻게 하는것인가?
//브라우저와 웹 서버가 통신을 주고받을 때 오는 것이다.

//페이지 전체를 리로딩 하면 사용자의 관심이 분산될 수 밖에 없다.
//또 서버 입장에서도 모든 페이지를 다시 전송해야 하므로 손실이 컸다.

//이러한 불만족 상황에서 피어난 것이 바로 Ajax 이다.

//마이크로소프트와 넷스케이프가 웹 헤게모니를 두고 각축전을 벌이던 1990년대,
//마이크로소프트는 에이젝스를 가장 먼저 처음으로 웹 브라우저에 탑재한다.

//이때까지 이 기술은 이름조차 갖고 있지 않았다.
//이를 흔들어 깨운 것이 바로 구글이다.

//구글은 지메일이라는 서비스를 선보이면서 에이젝스를 가져온다.
//페이지의 리로드 없이 받은 정보함의 정보를 보여주었다.
//당시의 구글이 선보인 일련의 서비스들은 웹에대한 사람들의 고정관념을 리로드 하였다.

//세상은 오랫동안 잠자고 있던 에이젝스의 가치를 알아보게 된다.






// <2> 수업의 목적

// Ajax를 안쓰고 기본적인 html파일을 통해 웹사이트를 만들었을 때,
// 페이지 전환을 할 때마다 모든 정보를 받게 된다면 얼마나 비효율적인가?
//사용자는 특정 부분만 원하는데 말이다.
//부분적으로 웹사이트를 갱신할 수 있도록 도와주는 것이 바로 Ajax이다.

//사용자 입장에서는 변경되는 부분에대해에서만 집중 할 수 있는 사용성 증대
//필요한 부분만 부분적으로 로드할 수 있기 때문에 서버/웹브라우저 사용자의 입장에서도
//시간과 돈과 네트워크자원을 절약할 수 있다는 부분이 존재한다.

//예를들어 어떠한 웹 사이트를 만들고, 그 링크 목록을 관리한다면..
//에이젝스를 쓰지 않으면 각 사이트 마다 리스트의 형태와 번호를 관리해야 하지만
//에이젝스를 쓰게 되면 list 파일은 따로 관리하고(js가 아님), 본문 js는 ul ol만 관리하면 된다.
//그럼 모든 사이트의 내용들이 수정된다.

//만약 리스트에 내용을 추가하고 파일 내용을 추가한다면..
//js파일이 아니라 그냥 파일만 하나 만들어서 추가하면 이어진다.