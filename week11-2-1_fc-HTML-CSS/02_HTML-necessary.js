//<1> 핵심 요소 정리


// (1) <div> 요소
// division. 특별한 의미가 없는 구분을 위한 요소.
// 블럭, 상자 요소.


// (2) <h1> 요소
// heading. 제목(목차)을 의미하는 요소.
// 1~6번까지 있음. 블럭, 상자요소.
// 작으면 작을 수록 중요한 제목을 정의한다.
// css reset을 하지 않으면 작은 번호가 더 큰 글자를 표현한다.


// (3) <p> 요소
// paragraph. 문장을 의미하고 문장을 구분할때 요소.
// 블럭, 상자요소.


// (4) <img /> 요소
// image. 이미지를 삽입하는 요소. 
// 소스(이미지경로)src, 대체(이미지이름)alt는 필수요소.
// 인라인, 글자요소.


// (5) <ul> 요소
// unordered list. 순서가 필요없는 목록의 집합을 의미.
// 블럭, 상자요소
// 이의 자식요소는 <li> : list item => 목록 내 각 항목
// ul태그의 자식요소로는 li가 최소 하나는 있어야 한다.

// 반대 요소는 <ol> : oredere list. 순서가 필요한 목록의 집합. 사용빈도가 적음.


// (6) <a> 요소
// anchor. 다른/같은 페이지로 이동하는 하이퍼링크를 지정하는 요소.
// 필수속성은 href. hypertext reference라는 의미. 이 요소의 값으로 주소할당.
// 링크를 통해 새 창을 띄우고 싶다면 target="_blank"를 쓰면 된다.


// (7) <span> 요소
// span. 특별한 의미가 없는 구분을 위한 요소. div와 구별.
// 어떠한 문자를 구분지을 때 사용. 앞에서 했으니 언급 별로 x.


// (8) <br/> 요소
// break. 줄바꿈 요소이다.
// 예를들어 '동해물과 백두산이<br/>마르고 닳도록'이라 한다면,
// 출력되는 결과물은,
// '동해물과 백두산이
// 마르고 닳도록'
// 이렇게 될 것이다.
// 인라인, 글자요소.


// (9) <input> 요소
// input. 사용자가 데이터를 입력하는 요소.
// 인라인요소이기도 하고 블럭요소이기도 하다.
// 그래서 inline-block 요소라고도 함.

// 필수 속성은 type. 데이터의 타입을 확정해줘야 한다.

// type의 값으로 text일 때..
// 부가 속성으로 value와 값을 할당해 놓으면 미리 작성된 데이터가 적혀지고,
// 부가 속성으로 placeholder와 값을 할당해 놓으면 사용자가 입력할 값의 힌트가 적혀진다.
// 부가 속성으로 disalbed를 적으면 입력 요소를 비활성화 한다.

// type의 값으로 checkbox일 때..
// 사용자에게 체크를 했는지 안했는지 여부를 확인하는 것.
// 체크박스 자체는 내용이 없기 때문에 label라는 요소로 감쌀 수 있다.
// label : 인라인 요소. input의 제목.
// 부가 속성으로 checked를 적으면 미리 체크박스가 체크된다.

// type의 값으로 radio일 때..
// 부가 속성으로 name과 값을 적으면 하나의 범위로 포함되어,
// 여러 개 중에 1개만 택할 수 있게끔 하는 라디오속성을 표시하게 된다.


// (10) <table> 요소
// table. 표이다. 행(row)과 열(column)의 집합.
// 엑셀이나 스프레드 시트처럼 표현할 수 있다.
// 블럭과 인라인이 아닌 '테이블 요소'이다.

// 상세 내용은 <tr>로 행을 먼저 만들어야 한다table row.
// 그 다음 <td>로 열을 만든다table data.

// 단순 출력을 하게되면 딱히 줄같은건 지어지지 않는다.
// 많이 사용되는 요소는 아님.





// <2> 출력 연습

// 출력 연습은 요소정리할때 혼자 했으니 굳이 하지는 않겠음.
// 다만 강의를 진행하며 듣는 내용 중 중요한 내용이 있으면 적겠음.

// (1) h태그를 작성할 때 몇 픽셀인지는 중요하지 않다.
// 어차피 html은 구조를 나타내는 것이고, css로 모든 디자인을 하기 때문에 그렇다.

// (2) 요소(텍스트)를 어떤 요소로 묶어주는(감싸는) 행위를 wrapping(래핑)이라 한다.

// (3) table 태그를 사용할 때, td쪽에서 colspan이라는 속성을 사용할 수 있다.
// 이는 column span단어의 약어이고, 열을 몇 칸 확장할 것인지를 의미한다.
// 실제 엑셀 등에서 표가 필요한 경우가 아니라면,
// html에서 굳이 이 태그를 사용하여 표를 만들려 시도하지 말아라.
// 대표적으로 grid나 다른 css기능으로 레이아웃을 작업해야 한다.





// <3> 주석

// 블럭해서 cmd + / 로 하면 끝.
// 모든 에디터에서 다 동일하게 사용.





// <4> 전역속성

// (1) title
// a태그 안에 title이라는 속성과 값을 추가하면 커서를 올렸을 때 정보가 뜬다.


// (2) style
// 어떤 태그든 style이라는 속성과 값을 추가하면 css속성을 적용할 수 있다.


// (3) class
// 어떤 태그든 class라는 속성과 값을 추가하면 css속성 적용 시 한꺼번에 적용 가능하다.
// 여러 태그에 적용할 수 있다.
// css에서는 html에서 class="이름"이 있을시, .이름{} 으로 스타일 적용 가능.


// (4) id
// 어떤 태그든 id라는 속성과 값을 추가하면, 요소를 지칭하는 고유한 이름이 된다.
// 단 하나의 태그에만 적용할 수 있다.
// css에서는 html에서 id="이름"이 있을시, #이름{}으로 스타일 적용 가능.


// (5) data
// 사용법: <태그 data-이름="데이터"></태그>
// 요소에 데이터를 저장하고, js를 통해 데이터를 끄집어내어 활용할 수 있게끔 한다.

// 이를 js로 dom으로 코드를 작성하면 실행이 안 될 수도 있는데,
// 이는 html에서 js실행이 html코드가 다 인식되는 것보다 일찍 실행되어서 그렇다.
// 이러한 문제를 해결하기 위해서는 1.script js 파일을 body 밑부분에 놓거나,
// 2. script부분에 defer라는 속성을 놓으면 해결된다.
