// <1> 기본문법

// <태그>      내용       </태그>
//시작태그  요소의 내용   종료태그
//열린태그                닫힌태그
// => 이 모든걸 통틀어서 요소(element)라고 한다





// <2> 부모와 자식 관계의 이해

// 들여쓰기
//  <div><div></div></div>
// 위처럼 보다는..
//  <div>
//    <div></div>
//  </div>
// 이게 낫다

// <태그>  <태그>내용</태그>  </태그>
//부모요소     자식요소       부모요소

// <태그> => 내어쓰기
//   <태그>내용</태그> => 들여쓰기 tab
// </태그> => 내어쓰기 shift + tab

// 부모의 부모요소 = 상위요소, 조상요소
// 자식의 자식요소 = 하위요소, 후손요소





// <3> 빈태그 관련 & 속성/값 관련

// html 1~4버전까지는 닫힌태그가 없는 빈태그를 <태그 속성> 이렇게만 작성했었음.
// 하지만 xhtml에서는 <태그 속성/>을 했어야 했고, html 5버전에서는 이 두 가지 모두 가능.

// <태그 속성Attribute="값Value">내용</태그>
//              기능의확장
// 예시
// <img src="./cat.jpg" alt="고양이" />
//      이미지의 경로   이미지의 이름(대체 텍스트 / alterntate text)
//       화면에 출력

// img의 src나 input의 type과 같이 꼭 필요한 속성을 '필수속성'이라 한다.
// 이는 빈 태그들이 각각의 역할을 명확하게 하기 위해 속성을 작성하는 것.





// <4> 글자와 상자

// 요소가 화면에 출력되는 특성, 크게 2가지로 구분.
// 인라인inline 요소 : 글자를 만들기 위한 요소들.
// 블록block 요소 : 상자(레이아웃)를 만들기 위한 요소들.


// (1) span
// <span>Hello</span>
// <span>World</span>
// 대표적인 인라인 요소이다. 
// 본질적으로 아무것도 나타내지 않고 콘텐츠 영역을 설정하는 용도로 사용된다.
// 이를 출력하면 Hello World 로 요소가 수평으로 쌓인다.
// 줄을 바꾸면 띄어쓰기 처리가 되며, 옆에다 붙이면 글자가 붙어버린다.

// 인라인요소에 style로가로width와 세로height 요소를 추가하면 변화가 없다.
// 왜냐? 글자는 가로, 세로 사이즈를 가질 수 없기 때문이다.
// span은 inline으로 글자취급을 당하기 때문에 그렇다.

// margin이나 padding처럼 여백을 주는 것은 일부 가능하다.
// 마진으로 줄때는 요소의 외부어백을 지정하는 것이고,
// 패딩은 요소의 내부여백을 지정하는 속성이다.
// 단, 좌우는 되지만 상하는 안된다.

// 또한 span안에 블럭요소를 못넣는다. ex) div
// 단, 같은 글자요소인 span은 가능하다.


// (2) div
// <div>Hello</div>
// <div>World</div>
// 대표적인 블럭 요소이다.
// 본질적으로 아무것도 나타내지 않고 콘텐츠 영역을 설정하는 용도이다.
// 이를 출력하면 자동적으로 줄바꿈 처리하 되며,
// 부모요소의 크기만큼 자동으로 늘어난다.
// 또한 포함한 콘텐츠 크기만큼 자동으로 줄어든다.

// width나 height를 적용해도 좌우 상하 모두 적용된다.
// margin, padding 역시 상하 좌우 모두 적용된다.

// 또한 div 안에 인라인요소는 넣을 수 있다. ex) span
// 블럭 요소 역시 가능하다.