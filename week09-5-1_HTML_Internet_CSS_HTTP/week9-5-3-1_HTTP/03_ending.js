// <5> 마무리

// HTTP와 HTTPS 혹은 SSL 의 차이?
// 여기서 s 는 secure의 약자로, 안전하다는 의미.
// 과거에는 일반적인 내용으로만 웹을 사용하였으나 현재는 금융 국방 개인정보 등을 사용함에따라
// 정보를 안전하게 관리하여야 하는 필요성이 대두되었음.
// 그래서 https를 통해 통신하면 당사자들끼리만 해당 정보를 확인 할 수 있음.
// 암호화 되어있기 때문!

// cache란?
// 저장한다는 뜻이다. 한 번 웹사이트를 접속해서 다운로드 받았다면,
// 다시 접속할 때 똑같은 정보를 다운로드 받지 않는다는 의미이다.
// 하지만 내용이 갱신되었을 때 바뀐 내용을 확인할 수 있는지는 모르는 상황.
// 이럴 때는 새로고침을 사용하면 된다!
// 그러나 일반 사용자들은 갱신 여부를 쉽게 알 수 없기 때문에,
// cache-control이나 prgma와 같은 테크닉들이 사용되고 있다.

// 개인화도 중요한 문제이다.
// 쇼핑몰의 장바구니를 사용할 때, 로그인이 유지되는 상황.
// 우리가 웹사이트를 사용하는 기록들을 웹사이트와 웹브라우저가 기억하고 있기 때문인데,
// 이는 쿠키라는 개념 때문임.
// 쿠키라는 녀석을 웹브라우저에 설정하면 접속할 때마다 개별적 값을 서버에 전송하는 것에 따라
// 사용자의 정보를 보호할 수 있게 되었다. 요새는 web storage라는 게 사용되어지고 있다.

// proxy는?
// 웹브라우저와 웹서버 사이에 프록시라 불리는 중개서버를 둘 수 있다.
// 중간의 서버가 캐시를 대신, 보안공격 방어, 사용자의 서비스를 여러개로 분산 제공가능.

// 네트워크 모니터링 도구
// 1. developer tools > network
// 2. wireshark.org

